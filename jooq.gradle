// You can invoke JOOQ code generation using this script.
// Just run it from IDE, or to force code generation use "gradle --rerun-tasks -b jooq.gradle"

plugins {
    id 'nu.studer.jooq' version '3.0.3' // see details in https://github.com/etiennestuder/gradle-jooq-plugin
}

apply plugin: 'java'

defaultTasks 'generateDbTestsApplicationJooqSchemaSource'

repositories {
    jcenter()
}

group = 'com.clevergang'
version = '1.0.0'

repositories {
    jcenter()
}

// We need Java8 for this project
tasks.withType(JavaCompile) {
    sourceCompatibility = '1.8'
}

dependencies {
    jooqRuntime "org.postgresql:postgresql:9.4.1212"
}

// jooq configuration
jooq {
    version = '3.11.11'
    edition = 'OSS'   // the default (can be omitted), other allowed values are PRO, PRO_JAVA_6, and TRIAL
    DbTestsApplication(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5432/testdb'
            user = 'devuser'
            password = 'devuser'
            schema = 'public'
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
            }
            target {
                packageName = 'com.clevergang.dbtests.repository.impl.jooq.generated'
                directory = './src/main/java/'
            }
        }
    }
}

