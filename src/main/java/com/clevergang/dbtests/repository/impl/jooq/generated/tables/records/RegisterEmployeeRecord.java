/*
 * This file is generated by jOOQ.
 */
package com.clevergang.dbtests.repository.impl.jooq.generated.tables.records;


import com.clevergang.dbtests.repository.impl.jooq.generated.tables.RegisterEmployee;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RegisterEmployeeRecord extends TableRecordImpl<RegisterEmployeeRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = -1861812289;

    /**
     * Setter for <code>public.register_employee.employee_id</code>.
     */
    public void setEmployeeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.register_employee.employee_id</code>.
     */
    public Integer getEmployeeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.register_employee.department_id</code>.
     */
    public void setDepartmentId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.register_employee.department_id</code>.
     */
    public Integer getDepartmentId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.register_employee.company_id</code>.
     */
    public void setCompanyId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.register_employee.company_id</code>.
     */
    public Integer getCompanyId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return RegisterEmployee.REGISTER_EMPLOYEE.EMPLOYEE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return RegisterEmployee.REGISTER_EMPLOYEE.DEPARTMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return RegisterEmployee.REGISTER_EMPLOYEE.COMPANY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getEmployeeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getDepartmentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getCompanyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getEmployeeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getDepartmentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCompanyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegisterEmployeeRecord value1(Integer value) {
        setEmployeeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegisterEmployeeRecord value2(Integer value) {
        setDepartmentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegisterEmployeeRecord value3(Integer value) {
        setCompanyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegisterEmployeeRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RegisterEmployeeRecord
     */
    public RegisterEmployeeRecord() {
        super(RegisterEmployee.REGISTER_EMPLOYEE);
    }

    /**
     * Create a detached, initialised RegisterEmployeeRecord
     */
    public RegisterEmployeeRecord(Integer employeeId, Integer departmentId, Integer companyId) {
        super(RegisterEmployee.REGISTER_EMPLOYEE);

        set(0, employeeId);
        set(1, departmentId);
        set(2, companyId);
    }
}
